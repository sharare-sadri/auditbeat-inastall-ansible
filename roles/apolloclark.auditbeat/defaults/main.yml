---
auditbeat:
  version: "7.5.1"
service_src: "auditbeat.service"
service_dest: "/lib/systemd/system/"
auditbeat_src: "https://repo/repository/devops/binary/auditbeat.tar.gz"
auditbeat_dest: "/opt/"
archive_scr: "/opt/auditbeat.tar.gz"
archive_dest: "/opt/"
auditbeat_path: "/opt/auditbeat/"
installation_type: "linux"
log_path: "/var/log/auditbeat"
auditbeat_service: "auditbeat.service"
auditbeat_config_scr: "auditbeat-7.5.j2"
auditbeat_config_dest: "/opt/auditbeat/auditbeat.yml"

##################################################################
elastic_url: "https://elk.tech/"

auditbeat_defaults:
  daemon: "auditbeat"
  version: "7.5.1"
  config_include_dir: "/etc/auditbeat/"
  install_only: false
  install_repo: true
  skip_restart: true
  skip_start: true
  sys_user: "root"
  sys_group: "root"


  path:
    home: "/usr/share/auditbeat"
    config: "/etc/auditbeat"
    data: "/var/lib/auditbeat"
    logs: "/var/log/auditbeat/auditbeat.log"

  config:
    modules:
      path: "${path.config}/conf.d/*.yml"
      reload:
        enabled: false
        period: "10s"

  modules:
    # https://www.elastic.co/guide/en/beats/auditbeat/7.5.1/auditbeat-module-auditd.html#_configuration_options_13
    auditd:
      resolve_ids: true
      failure_mode: "silent"
      backlog_limit: 8196
      rate_limit: 0
      include_raw_message: true
      include_warnings: true
      socket_type: "multicast"
      audit_rule_files: []
      audit_rules:
        # https://www.elastic.co/guide/en/beats/auditbeat/7.5.1/auditbeat-module-auditd.html#_audit_rules
        # https://github.com/xeraa/vagrant-elastic-stack/blob/master/elastic-stack/templates/auditbeat.yml
        # https://github.com/elastic/beats/pull/5516

        ## If you are on a 64 bit platform, everything should be running
        ## in 64 bit mode. This rule will detect any use of the 32 bit syscalls
        ## because this might be a sign of someone exploiting a hole in the 32
        ## bit API.


        # Audit the audit logs
        ## Successful and unsuccessful attempts to read information from the audit records
        - w /var/log/audit/ -k auditlog


        # System startup scripts
        - w /etc/inittab -p wa -k init
        - w /etc/init.d/ -p wa -k init
        - w /etc/init/ -p wa -k init


        # Systemd
        - w /bin/systemctl -p x -k systemd 
        - w /etc/systemd/ -p wa -k systemd


        ## SELinux events that modify the system's Mandatory Access Controls (MAC)
        - w /etc/selinux/ -p wa -k mac_policy


        ## Session initiation information
        - w /var/run/utmp -p wa -k session
        - w /var/log/btmp -p wa -k session
        #- w /var/log/wtmp -p wa -k session

        ## Capturing Login configuration and information
        - w /etc/login.defs -p wa -k login
        - w /etc/securetty -p wa -k login
        - w /var/log/lastlog -p wa -k login
        - w /var/log/tallylog -p wa -k login

        ## Capturing events where the system date and/or time has been modified 
        - a always,exit -F arch=b64 -S adjtimex -S settimeofday -S clock_settime -k time
        - w /etc/localtime -p wa -k time


        ## Capturing events that modify user/group information
        - w /etc/group -p wa -k identity 
        - w /etc/passwd -p wa -k identity
        - w /etc/gshadow -p wa -k identity
        - w /etc/shadow -p wa -k identity
        - w /etc/security/opasswd -p wa -k opasswd
        - w /usr/bin/passwd -p x -k passwd_modification
        - w /etc/sudoers -p wa -k action


        # events that change group identifiers
        - w /usr/sbin/groupadd -p x -k group_modification
        - w /usr/sbin/groupmod -p x -k group_modification
        - w /usr/sbin/addgroup -p x -k group_modification
        - w /usr/sbin/useradd -p x -k user_modification
        - w /usr/sbin/usermod -p x -k user_modification
        - w /usr/sbin/adduser -p x -k user_modification


        # Unauthorized access attempts
        - a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EACCES -k access
        - a always,exit -F arch=b64 -S open,creat,truncate,ftruncate,openat,open_by_handle_at -F exit=-EPERM -k access


        # Pam configuration
        - w /etc/pam.d/ -p wa -k pam
        - w /etc/security/limits.conf -p wa  -k pam
        - w /etc/security/pam_env.conf -p wa -k pam
        - w /etc/security/namespace.conf -p wa -k pam
        - w /etc/security/namespace.init -p wa -k pam

        # Cron configuration & scheduled jobs
        - w /etc/cron.allow -p wa -k cron
        - w /etc/cron.deny -p wa -k cron
        - w /etc/cron.d/ -p wa -k cron
        - w /etc/cron.daily/ -p wa -k cron
        - w /etc/cron.hourly/ -p wa -k cron
        - w /etc/cron.monthly/ -p wa -k cron
        - w /etc/cron.weekly/ -p wa -k cron
        - w /etc/crontab -p wa -k cron
        - w /var/spool/cron/crontabs/ -k cron

        # SSH configuration
        - w /etc/ssh/sshd_config -k sshd
        - w /root/.ssh/authorized_keys -k ssh_files

        # Executions
        - a always,exit -F arch=b64 -S execve,execveat -k exec

        # External access (warning: these can be expensive to audit).
        #- a always,exit -F arch=b64 -S accept,bind,connect -F key=external-access

      

    # https://www.elastic.co/guide/en/beats/auditbeat/7.5.1/auditbeat-module-file_integrity.html
    file_integrity:
      paths:
        - /bin
        - /usr/bin
        - /sbin
        - /usr/sbin
        - /etc
  
      exclude_files:
        - '(?i)\.sw[nop]$'
        - '~$'
        - '/\.git($|/)'
      scan_at_start: true
      scan_rate_per_sec: "50 MiB"
      max_file_size: "100 MiB"
      hash_types: "[sha1]"
      recursive: false
    system:
      datasets:
        - host    # General host information, e.g. uptime, IPs
        - login   # User logins, logouts, and system boots.
        - package # Installed, updated, and removed packages
        - user    # User information
        - process # Started and stopped processes
          #  - socket

  

      

  # How often datasets send state updates with the
  # current state of the system (e.g. all currently
  # running processes, all open sockets).
  #state.period: 12h

  # Enabled by default. Auditbeat will read password fields in
  # /etc/passwd and /etc/shadow and store a hash locally to
  # detect any changes.
      user.detect_password_changes: true

  # File patterns of the login record files.
      login.wtmp_file_pattern: /var/log/wtmp*
      login.btmp_file_pattern: /var/log/btmp*   
              
  # https://www.elastic.co/guide/en/beats/auditbeat/7.5.1/defining-processors.html


  output:
  #   # https://www.elastic.co/guide/en/beats/auditbeat/7.5.1/elasticsearch-output.html
  #   elasticsearch:
  #     enabled: false
  #     hosts:
  #       - "127.5.1.0.1:9200"
  #     compression_level: 0
  #     worker: 1
  #     protocol: "http"  # "https"
  #     username: ""  # "elastic"
  #     password: ""  # "changeme"
  #     parameters: []
  #     path: ""
  #     headers: []
  #     proxy_url: ""
  #     index: ""  # "auditbeat-%{[beat.version]}-%{+yyyy.MM.dd}"
  #     indices: []
  #     pipeline: ""
  #     pipelines: []
  #     max_retires: 3
  #     bulk_max_size: 50
  #     timeout: 90
  #     ssl: []

    # https://www.elastic.co/guide/en/beats/auditbeat/7.5.1/logstash-output.html
    logstash:
      enabled: true
      hosts:
        - "logstash-host:8080"

          #compression_level: 3
      worker: 1
      loadbalance: true
      ttl: 0
      pipelining: 2
      proxy_url: ""
      proxy_use_local_resolver: false
      timeout: 30
      max_retries: 3
      bulk_max_size: 2048
      slow_start: false
      #ssl: []

      #    # https://www.elastic.co/guide/en/beats/auditbeat/7.5.1/kafka-output.html
      #    kafka:
      #      enabled: false
      #      hosts:
      #        - "127.5.1.0.1:9092"
      #      topic: "auditbeat"
      #      key: ''
      #      partition:
      #        hash:
      #          reachable_only: false
      #          hash: []
      #      username: ''
      #      password: ''
      #      version: '0.10.0'
      #      metadata:
      #        retry:
      #          max: 3
      #          backoff: 250ms
      #        refresh_frequency: 10m
      #      worker: 1
      #      max_retires: 3
      #      bulk_max_size: 2048
      #      timeout: "30s"
      #      broker_timeout: "10s"
      #      channel_buffer_size: 256
      #      keep_alive: 0
      #      compression: "gzip"
      #      max_message_bytes: 1000000
      #      required_acks: 1
      #      client_id: "beats"
      #      ssl: []

    redis: []

    file: []

    console: []

  setup:
    # https://www.elastic.co/guide/en/beats/auditbeat/7.5.1/configuration-dashboards.html
    dashboards:
      enabled: false
      directory: '${path.home}/kibana'
      url: ""
      file: ""
      beat: "auditbeat"
      kibana_index: ".kibana"
      index: "auditbeat-*"
      always_kibana: true
      retry.enabled: true

    # https://www.elastic.co/guide/en/beats/auditbeat/7.5.1/configuration-template.html
    template:
      enabled: false
      name: "auditbeat"
      pattern: "auditbeat-*"
      fields: "fields.yml"
      overwrite: false

    # https://www.elastic.co/guide/en/beats/auditbeat/current/setup-kibana-endpoint.html
    kibana:
      host: "https://elk.tech/"
              
      
      protocol: "http"
      usernamee: ""
      password: ""
      path: ""

  # https://www.elastic.co/guide/en/beats/auditbeat/7.5.1/configuration-monitor.html
  xpack:
    monitoring: []

  # https://www.elastic.co/guide/en/beats/auditbeat/7.5.1/configuration-logging.html
  logging:
    to_syslog: false
    to_eventlog: false
    to_files: true
    level: "info"
    selectors: '["*"]'
    metrics:
      enabled: true
      period: "30s"
    files:
      path: "/var/log/auditbeat"
      name: "auditbeat"
      rotateeverybytes: "10485760"
      keepfiles: "7"
      permissions: "0600"
    json: false

  

  
